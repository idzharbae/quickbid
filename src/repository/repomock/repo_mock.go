// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package repomock is a generated GoMock package.
package repomock

import (
	gomock "github.com/golang/mock/gomock"
	entity "github.com/idzharbae/quickbid/src/entity"
	reflect "reflect"
)

// MockAttendanceReaderRepo is a mock of AttendanceReaderRepo interface
type MockAttendanceReaderRepo struct {
	ctrl     *gomock.Controller
	recorder *MockAttendanceReaderRepoMockRecorder
}

// MockAttendanceReaderRepoMockRecorder is the mock recorder for MockAttendanceReaderRepo
type MockAttendanceReaderRepoMockRecorder struct {
	mock *MockAttendanceReaderRepo
}

// NewMockAttendanceReaderRepo creates a new mock instance
func NewMockAttendanceReaderRepo(ctrl *gomock.Controller) *MockAttendanceReaderRepo {
	mock := &MockAttendanceReaderRepo{ctrl: ctrl}
	mock.recorder = &MockAttendanceReaderRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAttendanceReaderRepo) EXPECT() *MockAttendanceReaderRepoMockRecorder {
	return m.recorder
}

// GetByID mocks base method
func (m *MockAttendanceReaderRepo) GetByID(id int) (entity.Attendance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", id)
	ret0, _ := ret[0].(entity.Attendance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockAttendanceReaderRepoMockRecorder) GetByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockAttendanceReaderRepo)(nil).GetByID), id)
}

// MockAttendanceWriterRepo is a mock of AttendanceWriterRepo interface
type MockAttendanceWriterRepo struct {
	ctrl     *gomock.Controller
	recorder *MockAttendanceWriterRepoMockRecorder
}

// MockAttendanceWriterRepoMockRecorder is the mock recorder for MockAttendanceWriterRepo
type MockAttendanceWriterRepoMockRecorder struct {
	mock *MockAttendanceWriterRepo
}

// NewMockAttendanceWriterRepo creates a new mock instance
func NewMockAttendanceWriterRepo(ctrl *gomock.Controller) *MockAttendanceWriterRepo {
	mock := &MockAttendanceWriterRepo{ctrl: ctrl}
	mock.recorder = &MockAttendanceWriterRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAttendanceWriterRepo) EXPECT() *MockAttendanceWriterRepoMockRecorder {
	return m.recorder
}

// Insert mocks base method
func (m *MockAttendanceWriterRepo) Insert(attendance entity.Attendance) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", attendance)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert
func (mr *MockAttendanceWriterRepoMockRecorder) Insert(attendance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockAttendanceWriterRepo)(nil).Insert), attendance)
}
