// Code generated by MockGen. DO NOT EDIT.
// Source: transactioner.go

// Package txnermock is a generated GoMock package.
package txnermock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	db "github.com/idzharbae/quickbid/src/bridge/db"
	reflect "reflect"
)

// MockTransactioner is a mock of Transactioner interface
type MockTransactioner struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionerMockRecorder
}

// MockTransactionerMockRecorder is the mock recorder for MockTransactioner
type MockTransactionerMockRecorder struct {
	mock *MockTransactioner
}

// NewMockTransactioner creates a new mock instance
func NewMockTransactioner(ctrl *gomock.Controller) *MockTransactioner {
	mock := &MockTransactioner{ctrl: ctrl}
	mock.recorder = &MockTransactionerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTransactioner) EXPECT() *MockTransactionerMockRecorder {
	return m.recorder
}

// DoWithTx mocks base method
func (m *MockTransactioner) DoWithTx(ctx context.Context, f func(context.Context, db.Tx) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoWithTx", ctx, f)
	ret0, _ := ret[0].(error)
	return ret0
}

// DoWithTx indicates an expected call of DoWithTx
func (mr *MockTransactionerMockRecorder) DoWithTx(ctx, f interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoWithTx", reflect.TypeOf((*MockTransactioner)(nil).DoWithTx), ctx, f)
}
